#battery_Lenovo-T450.txt
# created by shmilee
# refer to T440p, X220, Guide 'How to patch DSDT for working battery status'
# Note: requires "Fix Mutex with non-zero SyncLevel"

# OperationRegion (ECOR, EmbeddedControl, 0x00, 0x0100)
# 1. declaration accessed:
# HWAC,   16, SBRC,   16, SBFC,   16, SBAC,   16, SBVO,   16, SBBM,   16,
# SBDC,   16, SBDV,   16, SBSN,   16
# SBCH,   32
# SBMN,  128
# SBDN,  128
# 2. declaration not accessed:
# HWAK,   16, HSPD,   16, HDEN,   32, HDEP,   32,
# SBAE,   16, SBRS,   16, SBAF,   16, SBBS,   16
# SBMD,   16, SBCC,   16
# SBOM,   16, SBSI,   16, SBDT,   16,

# Note: disable secondary battery
#  *** uncomment this line if you have only one battery installed)
#into method label _STA parent_label BAT1 replace_content begin Return(0) end;

# 1.1 deal with 16-bit
into method label B1B2 remove_entry;
into definitionblock code_regex . insert
begin
Method (B1B2, 2, NotSerialized)\n
{\n
    Return (Or(Arg0, ShiftLeft(Arg1, 8)))
}\n
end;

# declarations from 16-bit to 8-bit
into device label EC code_regex HWAC,\s+16, replace_matched begin WAC0,8,WAC1,8, end;
into device label EC code_regex SBRC,\s+16, replace_matched begin BRC0,8,BRC1,8, end;
into device label EC code_regex SBFC,\s+16, replace_matched begin BFC0,8,BFC1,8, end;
into device label EC code_regex SBAC,\s+16, replace_matched begin BAC0,8,BAC1,8, end;
into device label EC code_regex SBVO,\s+16, replace_matched begin BVO0,8,BVO1,8, end;
into device label EC code_regex SBBM,\s+16, replace_matched begin BBM0,8,BBM1,8, end;
into device label EC code_regex SBDC,\s+16, replace_matched begin BDC0,8,BDC1,8, end;
into device label EC code_regex SBDV,\s+16, replace_matched begin BDV0,8,BDV1,8, end;
into device label EC code_regex SBSN,\s+16 replace_matched begin BSN0,8,BSN1,8, end;

# access to those registers from 16-bit to 8-bit
into_all all code_regex \\_SB\.PCI0\.LPC\.EC\.HWAC replaceall_matched begin B1B2(\\_SB.PCI0.LPC.EC.WAC0,\\_SB.PCI0.LPC.EC.WAC1) end;
into_all method label GBST code_regex \(SBRC, replaceall_matched begin (B1B2 (BRC0, BRC1), end;
into_all method label GBIF code_regex \(SBFC, replaceall_matched begin (B1B2 (BFC0, BFC1), end;
into_all method label GBST code_regex \(SBAC, replaceall_matched begin (B1B2 (BAC0, BAC1), end;
into_all method label GBST code_regex \(SBVO, replaceall_matched begin (B1B2 (BVO0, BVO1), end;
into_all method label GBIF code_regex \(SBBM, replaceall_matched begin (B1B2 (BBM0, BBM1), end;
into_all method label GBIF code_regex \(SBDC, replaceall_matched begin (B1B2 (BDC0, BDC1), end;
into_all method label GBIF code_regex \(SBSN, replaceall_matched begin (B1B2 (BSN0, BSN1), end;

into_all method label GBIF code_regex SBDV replaceall_matched begin B1B2 (BDV0, BDV1) end;

# 1.2 deal with 32-bit
into method label B1B4 remove_entry;
into definitionblock code_regex . insert
begin
Method (B1B4, 4, NotSerialized)\n
{\n
    Store (Arg3, Local0)\n
    Or (Arg2, ShiftLeft(Local0, 8), Local0)\n
    Or (Arg1, ShiftLeft(Local0, 8), Local0)\n
    Or (Arg0, ShiftLeft(Local0, 8), Local0)\n
    Return (Local0)\n
}\n
end;

into device label EC code_regex SBCH,\s+32 replace_matched begin BCH0,8,BCH1,8,BCH2,8,BCH3,8 end;
into_all method label GBIF code_regex \(SBCH, replaceall_matched begin (B1B4(BCH0,BCH1,BCH2,BCH3), end;

# 1.3 deal with 128-bit
# utility methods to read/write buffers from/to EC
into method label RE1B parent_label EC remove_entry;
into method label RECB parent_label EC remove_entry;
into device label EC insert
begin
Method (RE1B, 1, NotSerialized)\n
{\n
    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n
    Field(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\n
    Return(BYTE)\n
}\n
Method (RECB, 2, Serialized)\n
{\n
    ShiftRight(Arg1, 3, Arg1)\n
    Name(TEMP, Buffer(Arg1) { })\n
    Add(Arg0, Arg1, Arg1)\n
    Store(0, Local0)\n
    While (LLess(Arg0, Arg1))\n
    {\n
        Store(RE1B(Arg0), Index(TEMP, Local0))\n
        Increment(Arg0)\n
        Increment(Local0)\n
    }\n
    Return(TEMP)\n
}\n
end;

into device label EC code_regex (SBMN,)\s+(128) replace_matched begin BMNX,%2,//%1%2 end;
into device label EC code_regex (SBDN,)\s+(128) replace_matched begin BDNX,%2,//%1%2 end;

into method label GBIF code_regex \(SBMN, replaceall_matched begin (RECB(0xA0,128), end;
into method label GBIF code_regex \(SBDN, replaceall_matched begin (RECB(0xA0,128), end;

